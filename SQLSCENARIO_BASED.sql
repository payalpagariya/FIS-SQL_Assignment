DROP TABLE REVIEWS
CREATE TABLE BOOKS(ID INT PRIMARY KEY, 
				TITLE VARCHAR(50), 
				AUTHOR VARCHAR(50), 
				ISBN BIGINT UNIQUE, 
				PUBLISHED_DATE DATETIME)

INSERT INTO BOOKS VALUES(1, 'My First SQL book', 'Mary Parker', 981483029127, '2012-02-22 12:08:17')
INSERT INTO BOOKS VALUES(2, 'My Second SQL book', 'John Mayer', 857300923713, '1972-07-03 09:22:45')
INSERT INTO BOOKS VALUES(3, 'My Third SQL book', 'Cary Flint', 523120967812, '2015-10-18 14:05:44')

SELECT * FROM BOOKS

--DETAILS OF THE BOOKS WRITTEN BY AUTHOR WHOSE NAME ENDS WITH ER.
SELECT TITLE, ISBN, PUBLISHED_DATE FROM BOOKS WHERE AUTHOR LIKE '%ER'





CREATE TABLE REVIEWS(ID INT PRIMARY KEY,
				BOOK_ID INT,
				REVIEWER_NAME VARCHAR(40),
				CONTENT VARCHAR(50),
				RATING INT,
				PUBLISHED_DATE DATETIME)

INSERT INTO REVIEWS VALUES(1,1,'John Smith','My first review', 4, '2017-12-10 05:50:11:10')
INSERT INTO REVIEWS VALUES(2,2,'John Smith','My second review', 5, '2017-10-13 15:05:12:60')
INSERT INTO REVIEWS VALUES(3,2,'Alice Walker','Another review', 1, '2017-10-22 23:47:10:10')

SELECT * FROM REVIEWS

--DISPLAY THE TITLE, AUTHOR AND REVIEWERNAME FOR ALL THE BOOKS FROM THE ABOVE TABLE
SELECT B.TITLE, B.AUTHOR, R.REVIEWER_NAME FROM BOOKS B, REVIEWS R WHERE B.ID  = R.BOOK_ID
--OR
SELECT TITLE, AUTHOR, REVIEWER_NAME FROM BOOKS B LEFT JOIN REVIEWS R ON B.ID = R.BOOK_ID




SELECT * FROM BOOKS
SELECT * FROM REVIEWS
--DISPLAY REVIEWER NAME WHO REVIEWED MORE THAN ONE BOOK.
SELECT REVIEWER_NAME FROM REVIEWS GROUP BY REVIEWER_NAME HAVING COUNT(REVIEWER_NAME) > 1




drop table customers
CREATE TABLE CUSTOMERS(ID INT PRIMARY KEY,
					NAME VARCHAR(50),
					AGE INT,
					ADDRESS VARCHAR(50),
					SALARY FLOAT)
					
INSERT INTO CUSTOMERS VALUES(1,'Ramesh',32,'Ahmedabad',2000.00)
INSERT INTO CUSTOMERS VALUES(2,'Khilan',25,'Delhi',1500.00)
INSERT INTO CUSTOMERS VALUES(3,'Kaushik',23,'Kota',2000.00)
INSERT INTO CUSTOMERS VALUES(4,'Chaitali',25,'Mumbai',6500.00)
INSERT INTO CUSTOMERS VALUES(5,'Hardik',27,'Bhopal',8500.00)
INSERT INTO CUSTOMERS VALUES(6,'Komal',22,'MP',4500.00)
INSERT INTO CUSTOMERS VALUES(7,'Muffy',24,'Indore',10000.00)

SELECT * FROM CUSTOMERS

--DISPLAY NAME FOR CUSTOMER FROM ABOVE CUSTOMER TABLE WHO LIVE IN SAME ADDRESS WHICH HAS CHARACTER 'O' ANYWHERE IN ADDRESS
SELECT NAME FROM CUSTOMERS WHERE ADDRESS IN (SELECT ADDRESS FROM CUSTOMER WHERE ADDRESS LIKE '%O%')




CREATE TABLE ORDERS(OID INT PRIMARY KEY,
				DATE DATETIME,
				CUSTOMER_ID INT,
				AMOUNT INT)

INSERT INTO ORDERS VALUES(102, '2009-10-08 00:00:00', 3, 3000)
INSERT INTO ORDERS VALUES(100, '2009-10-08 00:00:00', 3, 1500)
INSERT INTO ORDERS VALUES(101, '2009-11-20 00:00:00', 2, 1560)
INSERT INTO ORDERS VALUES(103, '2008-05-20 00:00:00', 4, 2060)

SELECT * FROM ORDERS

--DISPLAY THE DATE, TOTAL NO. OF CUSTOMER PLACED ORDER ON SAME DATE
SELECT DATE, COUNT(DATE) AS 'NO. OF CUSTOMER' FROM ORDERS GROUP BY DATE





CREATE TABLE EMPLOYEE(ID INT PRIMARY KEY,
					NAME VARCHAR(30),
					AGE INT,
					ADDRESS VARCHAR(30),
					SALARY FLOAT)

INSERT INTO EMPLOYEE VALUES(1,'Ramesh',32,'Ahmedabad',2000.00)
INSERT INTO EMPLOYEE VALUES(2,'Khilan',25,'Delhi',1500.00)
INSERT INTO EMPLOYEE VALUES(3,'Kaushik',23,'Kota',2000.00)
INSERT INTO EMPLOYEE VALUES(4,'Chaitali',25,'Mumbai',6500.00)
INSERT INTO EMPLOYEE VALUES(5,'Hardik',27,'Bhopal',8500.00)
INSERT INTO EMPLOYEE(ID, NAME, AGE, ADDRESS) VALUES(6,'Komal',22,'MP')
INSERT INTO EMPLOYEE(ID, NAME, AGE, ADDRESS) VALUES(7,'Muffy',24,'Indore')

SELECT * FROM EMPLOYEE

--DISPLAY THE NAMES OF THE EMPLOYEE IN LOWER CASE, WHOSE SALARY IS NULL
SELECT CASE WHEN NAME IS NOT NULL THEN LOWER(NAME)
ELSE NULL
END AS 'NAME' 
FROM EMPLOYEE WHERE SALARY IS NULL






CREATE TABLE STUDENTDETAILS(REGISTERNO INT PRIMARY KEY,
						NAME VARCHAR(30),
						AGE INT,
						QUALIFICATION VARCHAR(10),
						MOBILENO BIGINT,
						MAIL_ID VARCHAR(40),
						LOCATION VARCHAR(50),
						GENDER VARCHAR(5))

INSERT INTO STUDENTDETAILS VALUES(2, 'Sai', 22, 'B.E', 9952836777, 'Sai@gmail.com', 'Chennai', 'M')
INSERT INTO STUDENTDETAILS VALUES(3, 'Kumar', 20, 'BSC', 7890125648, 'Kumar@gmail.com', 'Madurai', 'M')
INSERT INTO STUDENTDETAILS VALUES(4, 'Selvi', 22, 'B.Tech', 8904567342, 'selvi@gmail.com', 'Selam', 'F')
INSERT INTO STUDENTDETAILS VALUES(5, 'Nisha', 25, 'M.E', 7834672310, 'Nisha@gmail.com', 'Theni', 'F')
INSERT INTO STUDENTDETAILS VALUES(6, 'SaiSaran', 21, 'B.A', 7890345678, 'saran@gmail.com', 'Madurai', 'F')
INSERT INTO STUDENTDETAILS VALUES(7, 'Tom', 23, 'BCA', 8901234675, 'Tom@gmail.com', 'Pune', 'M')

SELECT * FROM STUDENTDETAILS

--DISPLAY THE GENDER, TOTAL NO. OF MALE AND FEMALE FROM ABOVE RELATION
SELECT GENDER, COUNT(GENDER) AS 'GENDER COUNT' FROM STUDENTDETAILS GROUP BY GENDER







CREATE TABLE COURSEDETAILS(C_ID VARCHAR(10) PRIMARY KEY,
						C_NAME VARCHAR(30),
						START_DATE DATE,
						END_DATE DATE,
						FEE INT)

INSERT INTO COURSEDETAILS VALUES('DN003','DotNet','2018-02-01','2018-02-28',15000)
INSERT INTO COURSEDETAILS VALUES('DV004','DataVisualization','2018-03-01','2018-04-15',15000)
INSERT INTO COURSEDETAILS VALUES('JA002','Advancedjava','2018-01-02','2018-01-20',10000)
INSERT INTO COURSEDETAILS VALUES('JC001','CoreJava','2018-01-02','2018-01-12',3000)

SELECT * FROM COURSEDETAILS

DROP TABLE COURSEREGISTRATION
CREATE TABLE COURSEREGISTRATION(REGISTERNO INT REFERENCES STUDENTDETAILS(REGISTERNO),
						CID VARCHAR(10),
						BATCH VARCHAR(2))

INSERT INTO COURSEREGISTRATION VALUES(2,'DN003','FN')
INSERT INTO COURSEREGISTRATION VALUES(3,'DV004','AN')
INSERT INTO COURSEREGISTRATION VALUES(4,'JA002','FN')
INSERT INTO COURSEREGISTRATION VALUES(2,'JA002','AN')
INSERT INTO COURSEREGISTRATION VALUES(5,'JC001','FN')

SELECT * FROM COURSEREGISTRATION
SELECT * FROM COURSEDETAILS
SELECT * FROM COURSEDETAILS INNER JOIN COURSEREGISTRATION ON CID = C_ID
SELECT C_NAME,COUNT(CID) AS 'NO. OF STUDENTS' FROM COURSEDETAILS INNER JOIN COURSEREGISTRATION ON CID = C_ID GROUP BY C_ID HAVING C_ID IN (SELECT C_ID FROM COURSEDETAILS WHERE START_DATE >= '2018-01-02' AND END_DATE <= '2018-02-28') ORDER BY C_ID DESC
--RETRIEVE THE COURSENAME AND THE NUMBER OF STUDENTS REGISTERED FOR EACH COURSE BETWEEN 2018-01-02 AND 2018-02-28 AND ARRANGE THE RESULT BY COURSEID IN DESCENDING ID
SELECT C_NAME,COUNT(CID) AS 'NO. OF STUDENTS' FROM COURSEREGISTRATION, COURSEDETAILS GROUP BY CID,C_NAME HAVING CID IN (SELECT C_ID FROM COURSEDETAILS WHERE START_DATE >= '2018-01-02' AND END_DATE <= '2018-02-28')






CREATE TABLE CUSTOMER(CUSTOMER_ID INT PRIMARY KEY,
						FIRST_NAME VARCHAR(30),
						LAST_NAME VARCHAR(30))

INSERT INTO CUSTOMER VALUES(1,'George','Washington')
INSERT INTO CUSTOMER VALUES(2,'John','Adams')
INSERT INTO CUSTOMER VALUES(3,'Thomas','Jefferson')
INSERT INTO CUSTOMER VALUES(4,'James','Maddison')
INSERT INTO CUSTOMER VALUES(5,'James','Monroe')

SELECT * FROM CUSTOMER

DROP TABLE ORDERR
CREATE TABLE ORDERR(ORDER_ID INT PRIMARY KEY,
				ORDER_DATE DATE,
				AMOUNT FLOAT,
				CUSTOMER_ID INT)

INSERT INTO ORDERR VALUES(1,'07/04/1776',234.56,1)
INSERT INTO ORDERR VALUES(2,'03/14/1760',78.50,3)
INSERT INTO ORDERR VALUES(3,'05/23/1784',124.00,2)
INSERT INTO ORDERR VALUES(4,'09/03/1790',65.50,3)
INSERT INTO ORDERR VALUES(5,'07/21/1795',25.50,10)
INSERT INTO ORDERR VALUES(6,'11/27/1787',14.40,9)

SELECT * FROM ORDERR

--DISPLAY THE FIRSTNAME AND LASTNAME OF THE CUSTOMER WHO HAVE PLACED EXACTLY 2 ORDERS.
SELECT FIRST_NAME, LAST_NAME FROM CUSTOMER WHERE CUSTOMER_ID = (SELECT CUSTOMER_ID FROM ORDERR GROUP BY CUSTOMER_ID HAVING COUNT(CUSTOMER_ID) =2)

--STUDENTSDETAILS TABLE HERE
SELECT * FROM STUDENTDETAILS
--DISPLAY ALL THE STUDENT NAME IN REVERSE ORDER AND CAPITALIZE ALL THE CHARACTERS IN LOCATION
SELECT NAME,
	CASE WHEN LOCATION IS NOT NULL THEN UPPER(LOCATION)
	ELSE NULL
	END AS 'LOCATION'
	FROM STUDENTDETAILS ORDER BY REGISTERNO DESC


CREATE TABLE ORDER1(ID INT PRIMARY KEY,
				ORDERDATE DATE,
				ORDERNUMBER INT,
				CUSTOMERID INT,
				TOTALAMOUNT INT)

CREATE TABLE ORDERITEM(ID INT PRIMARY KEY,
					ORDERID INT REFERENCES ORDER1(ID),
					PRODUCTID INT REFERENCES PRODUCT(ID),
					UNITPRICE INT,
					QUANTITY INT)

CREATE TABLE PRODUCT(ID INT PRIMARY KEY,
					PRODUCTNAME VARCHAR(30),
					SUPPLIERID INT,
					UNITPRICE INT,
					PACKAGE VARCHAR(30),
					ISDISCONTINUED BIT)

--CREATE VIEW TABLE TO DISPLAY THE PRODUCTNAME, ORDERED QUANTITY AND ORDERNUMBER FROM THE ABOVE RELATIONS
CREATE VIEW VWPRODUCTORDER AS 
	SELECT 
	PRODUCTNAME, QUANTITY, ORDERNUMBER 
	FROM ORDERITEM
	LEFT JOIN ORDER1 ON ORDER1.ID = ORDERITEM.ORDERID
	LEFT JOIN PRODUCT ON PRODUCT.ID = ORDERITEM.PRODUCTID

SELECT * FROM VWPRODUCTORDER


SELECT * FROM COURSEDETAILS
SELECT * FROM COURSEREGISTRATION
SELECT * FROM STUDENTDETAILS
--DISPLAY THE COURSENAME REGISTERED BY STUDENT NISHA
SELECT C_NAME FROM COURSEDETAILS WHERE C_ID = (SELECT CID FROM COURSEREGISTRATION WHERE REGISTERNO = (SELECT REGISTERNO FROM STUDENTDETAILS WHERE NAME = 'Nisha'))
